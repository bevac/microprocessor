--------------------------------------------------------------------------------
------------------------ COMMUNICATION TESTFILE CREATOR ------------------------
--------------------------------------------------------------------------------

This programs creates three test files to check the correct functionality of
the communication module.

The first file (ending with _MEM_IN.txt) is a memory input file that contains
a randomly generated memory.

Then random read or write (or NOP) operations are performed. A file (ending
with _INPUT.txt) contains the commands the communication module has to execute.

The third file (ending with _MEM_OUT.txt) contains the memory at the end of all
random operations. 


The content of the instruction input file look like this:
MBR, MAR, RD, WR bits followed by a hex representation of the 8-bit ALU output 
at this instruction. This is followed by a random address (16-bit) in integer 
format and then an integer representation of the content of the MAR (16-bit) at
the end of this instruction. Both values are equal if the current address is 
loaded into the MAR. 
(The combinations of the random ALU output and the random address (in connection
with the current MBR content) might actually not be possible in the complete 
processor architecture, as the random ALU output might not be a possible 
result - but they are handled as if  they do not depend on each other.) 
In the end there is a hex representation of the value stored in the MBR (8-bit) 
at the end of the instruction.

The automated file generator only provides files with correct read and write
operations (in respect to the control bit order). To detect if the checks for 
incorrect microcode concerning read and write operations work correctly, the 
input file generated by the file generator has to be manipulated manually.